# For a detailed guide to building and testing on iOS, read the docs:
# https://circleci.com/docs/2.0/testing-ios/

version: 2.1

orbs:
  codecov: codecov/codecov@3.3.0
  macos: circleci/macos@2

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - validate-code
      - test-ios:
          requires:
            - validate-code
      - test-spm-podspec-archive:
          requires:
            - validate-code

commands:
  install_dependencies:
    steps:
      # restore pods related caches
      - restore_cache:
          name: Restore Gemfile Cache
          keys:
            - 1-gems-{{ checksum "Gemfile.lock" }}

      # make sure we're on the right version of cocoapods
      - run:
          name: Verify Cocoapods Version
          command: bundle check || bundle install --path vendor/bundle

      # save cocoapods version gem data
      - save_cache:
          name: Save Gemfile Cache
          key: 1-gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # restore pods related caches
      - restore_cache:
          name: Restore CocoaPods Cache
          keys:
            - cocoapods-cache-v5-{{ arch }}-{{ .Branch }}-{{ checksum "Podfile.lock" }}
            - cocoapods-cache-v5-{{ arch }}-{{ .Branch }}
            - cocoapods-cache-v5

      # install CocoaPods - using default CocoaPods version, not the bundle
      - run:
          name: Repo Update & Install CocoaPods
          command: make ci-pod-install

      # save pods related files
      - save_cache:
          name: Save CocoaPods Cache
          key: cocoapods-cache-v5-{{ arch }}-{{ .Branch }}-{{ checksum "Podfile.lock" }}
          paths:
            - ./Pods
            - ~/.cocoapods

  prestart_ios_simulator:
    steps:
      - macos/preboot-simulator:
          platform: "iOS"
          version: "17.0"
          device: "iPhone 15"

jobs:
  validate-code:
    macos:
      xcode: 15.0.0 # Specify the Xcode version to use

    steps:
      - checkout

      - install_dependencies

      - run:
          name: Install SwiftFormat
          command: make install-swiftformat

      - run:
          name: Lint Source Code
          command: make lint; make check-format

  test-ios:
    macos:
      xcode: 15.0.0 # Specify the Xcode version to use

    steps:
      - checkout

      - install_dependencies

      - prestart_ios_simulator

      - run:
          name: Run AEPMessaging Tests
          command: make test

      # Code coverage upload using Codecov
      # See options explanation here: https://docs.codecov.com/docs/codecov-uploader
      - codecov/upload:
          flags: aepmessaging-ios-tests
          upload_name: Coverage Report for AEPMessaging iOS Tests
          xtra_args: -c -v --xc --xp ./build/AEPMessaging.xcresult

  test-spm-podspec-archive:  
    macos:
      xcode: 15.0.0 # Specify the Xcode version to use
    
    steps:
      - checkout
      # verify XCFramework archive builds
      - run:
          name: Build XCFramework
          command: |
            if [ "${CIRCLE_BRANCH}" == "main" ]; then
              make archive
            fi
      # verify podspec is valid
      - run:
          name: Test Podspec
          command: |
            if [ "${CIRCLE_BRANCH}" == "main" ]; then
              make test-podspec
            fi
      # verify SPM works
      - run:
          name: Test SPM 
          command: |
            if [ "${CIRCLE_BRANCH}" == "main" ]; then
              make test-SPM-integration
            fi
